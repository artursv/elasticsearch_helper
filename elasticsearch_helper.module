<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexManager;

/**
 * Implements hook_entity_insert().
 */
function elasticsearch_helper_entity_insert(EntityInterface $entity) {
  /** @var ElasticsearchIndexManager $elasticsearchPluginManager */
  $elasticsearchPluginManager = \Drupal::service('plugin.manager.elasticsearch_index.processor');

  foreach ($elasticsearchPluginManager->getDefinitions() as $plugin) {
    if (isset($plugin['entityType']) && $entity->getEntityTypeId() == $plugin['entityType']) {
      if (!empty($plugin['bundle']) && $plugin['bundle'] != $entity->bundle()) {
        // Do not index if defined plugin bundle differs from entity bundle.
        continue;
      }
      // Index the entity in elasticsearch.
      $elasticsearchPluginManager->createInstance($plugin['id'])->index($entity);
    }
  }
}

/**
 * Implements hook_entity_update().
 */
function elasticsearch_helper_entity_update(EntityInterface $entity) {
  elasticsearch_helper_entity_insert($entity);
}

/**
 * Implements hook_entity_delete().
 */
function elasticsearch_helper_entity_delete(EntityInterface $entity) {
  /** @var ElasticsearchIndexManager $elasticsearchPluginManager */
  $elasticsearchPluginManager = \Drupal::service('plugin.manager.elasticsearch_index.processor');

  foreach ($elasticsearchPluginManager->getDefinitions() as $plugin) {
    if (isset($plugin['entityType']) && $entity->getEntityTypeId() == $plugin['entityType']) {
      if (!empty($plugin['bundle']) && $plugin['bundle'] != $entity->bundle()) {
        // Do not delete if defined plugin bundle differs from entity bundle.
        continue;
      }
      // Index the entity in elasticsearch.
      $elasticsearchPluginManager->createInstance($plugin['id'])->delete($entity);
    }
  }
}

/**
 * Implements hook_modules_installed().
 */
function elasticsearch_helper_modules_installed($modules) {
  /** @var ElasticsearchIndexManager $elasticsearchPluginManager */
  $elasticsearchPluginManager = \Drupal::service('plugin.manager.elasticsearch_index.processor');

  foreach ($elasticsearchPluginManager->getDefinitions() as $plugin) {
    // If the plugin provider was just installed.
    if (in_array($plugin['provider'], $modules)) {
      // Setup indidices for that plugin
      $elasticsearchPluginManager->createInstance($plugin['id'])->setup();
    }
  }
}

/**
 * Implements hook_module_preuninstall().
 */
function elasticsearch_helper_module_preuninstall($module) {
  /** @var ElasticsearchIndexManager $elasticsearchPluginManager */
  $elasticsearchPluginManager = \Drupal::service('plugin.manager.elasticsearch_index.processor');

  foreach ($elasticsearchPluginManager->getDefinitions() as $plugin) {
    // If the plugin provider is about to be uninstalled.
    if ($plugin['provider'] == $module) {
      // Drop indices for that plugin.
      $elasticsearchPluginManager->createInstance($plugin['id'])->drop();
    }
  }
}
